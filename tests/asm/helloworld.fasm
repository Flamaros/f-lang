IMPORTS
{
	MODULE "kernel32.dll"
	{
		GetStdHandle
		WriteFile
		ExitProcess
	}
}

SECTION ".text"
{
	main:
		sub     rsp, 20 ; reserve 32 bytes (0x20) of shadow space

		; hStdOut = GetStdHandle(STD_OUTPUT_HANDLE)
		mov		rcx, -11 ; STD_OUTPUT_HANDLE((DWORD)-11)
		call    GetStdHandle

		; WriteFile( hstdOut, message, length(message), &bytes, 0);
;		add		rsp, 0x20
		mov		rcx, rax								; move previous result (rax: hStdOut) to first parameter register (rcx)
		mov		rdx, message							; in some asm langages lea instruction is used here, but in nasm labels are directly address
		mov 	r8d, 12;message_length					; in f it should be an immediate value in simplest cases, but as I want my strings to have a length, length is also available in .rdata section
		mov		r9, NumberOfBytesWritten				; [out, optional] lpNumberOfBytesWritten
		push	0										; [in, out, optional] lpOverlapped
		call    WriteFile

		; ExitProcess(0)
;		add		rsp, 0x20
		mov		rcx, 0
		call    ExitProcess

		; never here
		hlt
}

SECTION ".rdata" // @TODO should I support ` or ' character for a special string token type?
{
	message:
		db      "Hello World", 0	; I put an addtionnal 0 but it can be omitted
	message_length:
		db		12					; 11 + 1 for the ending \0
	NumberOfBytesWritten:
		db		0, 0, 0, 0 
}
